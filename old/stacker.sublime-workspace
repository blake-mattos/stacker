{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"toggle",
				"slideToggle"
			],
			[
				"di",
				"display"
			],
			[
				"paddi",
				"padding"
			],
			[
				"m",
				"margin-bottom"
			],
			[
				"padd",
				"padding-left"
			],
			[
				"trans",
				"transparent"
			],
			[
				"mar",
				"margin"
			],
			[
				"pa",
				"padding"
			],
			[
				"op",
				"opacity"
			],
			[
				"min",
				"min-height"
			],
			[
				"check",
				"checkWrapper"
			],
			[
				"te",
				"text-align"
			],
			[
				"pos",
				"position"
			],
			[
				"b",
				"text-bottom"
			],
			[
				"c",
				"color"
			],
			[
				"bgc",
				"border-image-slice"
			],
			[
				"in",
				"inline-block"
			],
			[
				"padding",
				"padding-left"
			],
			[
				"font",
				"font-size"
			],
			[
				"slide",
				"slideUp"
			],
			[
				"l",
				"length"
			],
			[
				"curre",
				"currentQ"
			],
			[
				"cu",
				"currentQ"
			],
			[
				"sele",
				"selected"
			],
			[
				"border",
				"border"
			],
			[
				"ent",
				"entityWrapper"
			],
			[
				"selecte",
				"selected"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"re",
				"removeClass"
			],
			[
				"s",
				"selected"
			],
			[
				"showR",
				"showRecomendation"
			],
			[
				"select",
				"selectEntity"
			],
			[
				"margin",
				"margin"
			],
			[
				"cl",
				"clear"
			],
			[
				"d",
				"display"
			],
			[
				"h",
				"href	Attr"
			],
			[
				"blo",
				"inline-block"
			],
			[
				"fl",
				"fl-r	float: right;"
			],
			[
				"text",
				"text-align"
			],
			[
				"tex",
				"text-decoration"
			],
			[
				"guess",
				"guessNumber"
			],
			[
				"is",
				"isValidInput"
			],
			[
				"gues",
				"guessNumber"
			],
			[
				"really",
				"really-hot"
			],
			[
				"burning",
				"burning-hot"
			],
			[
				"ice",
				"ice-cold"
			],
			[
				"marg",
				"margin"
			],
			[
				"sec",
				"secretNumber"
			],
			[
				"block",
				"block"
			],
			[
				"paddin",
				"padding-bottom"
			],
			[
				"ml",
				"margin-left"
			],
			[
				"wid",
				"width"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "$(document).ready( function() {\n	$('.unanswered-getter').submit( function(event){\n		// zero out results if previous search has run\n		$('.results').html('');\n		// get the value of the tags the user submitted\n		var tags = $(this).find(\"input[name='tags']\").val();\n		getUnanswered(tags);\n	});\n\n	$('.inspiration-getter').submit( function(event){\n		//remove any old results\n		$('.results').html('');\n		var answerers = $(this).find(\"input[name='answerers']\").val();\n		//call the inspiration function here...\n		getInspiration(answerers);\n	});\n});\n\n// this function takes the question object returned by StackOverflow \n// and creates new result to be appended to DOM\nvar showQuestion = function(question) {\n	\n	// clone our result template code\n	var result = $('.templates .question').clone();\n	\n	// Set the question properties in result\n	var questionElem = result.find('.question-text a');\n	questionElem.attr('href', question.link);\n	questionElem.text(question.title);\n\n	// set the date asked property in result\n	var asked = result.find('.asked-date');\n	var date = new Date(1000*question.creation_date);\n	asked.text(date.toString());\n\n	// set the #views for question property in result\n	var viewed = result.find('.viewed');\n	viewed.text(question.view_count);\n\n	// set some properties related to asker\n	var asker = result.find('.asker');\n	asker.html('<p>Name: <a target=\"_blank\" href=http://stackoverflow.com/users/' + question.owner.user_id + ' >' +\n		question.owner.display_name +\n		'</a>' +\n		'</p>' +\n		'<p>Reputation: ' + question.owner.reputation + '</p>'\n		);\n\n	return result;\n};\n\n\nvar showAnswerers = function(answerer) {\n\n//clone template\nvar result = $('.templates .answerer').clone();\n\n//add functionality here...\n1\nreturn result;\n};\n\n\n// this function takes the results object from StackOverflow\n// and creates info about search results to be appended to DOM\nvar showSearchResults = function(query, resultNum) {\n	var results = resultNum + ' results for <strong>' + query;\n	return results;\n};\n\n// takes error string and turns it into displayable DOM element\nvar showError = function(error){\n	var errorElem = $('.templates .error').clone();\n	var errorText = '<p>' + error + '</p>';\n	errorElem.append(errorText);\n};\n\n// takes a string of semi-colon separated tags to be searched\n// for on StackOverflow\nvar getUnanswered = function(tags) {\n	\n	// the parameters we need to pass in our request to StackOverflow's API\n	var request = {tagged: tags,\n		site: 'stackoverflow',\n		order: 'desc',\n		sort: 'creation'};\n\n		var result = $.ajax({\n			url: \"http://api.stackexchange.com/2.2/questions/unanswered\",\n			data: request,\n			dataType: \"jsonp\",\n			type: \"GET\",\n		})\n		.done(function(result){\n			var searchResults = showSearchResults(request.tagged, result.items.length);\n\n			$('.search-results').html(searchResults);\n\n			$.each(result.items, function(i, item) {\n				var question = showQuestion(item);\n				$('.results').append(question);\n			});\n		})\n		.fail(function(jqXHR, error, errorThrown){\n			var errorElem = showError(error);\n			$('.search-results').append(errorElem);\n		});\n	};\n	\n	var getInspiration = function(answerers) {\n\n		var request = {\n			site: 'stackoverflow',\n		};\n\n		var result = $.ajax({\n			url: 'http://api.stackexchange.com/2.2/tags/' +answerers+ '/top-answerers/all_time',\n			data: request,\n			dataType: \"jsonp\",\n			type: \"GET\",\n		})\n		.done(function(result){\n			console.log(result);\n			$('.search-results').html(\"here are your results\");\n			$.each(result.items, function(i, item){\n				var topUsers = showUser(item);\n				$('.results').append(topUsers);\n			});\n		})\n		.fail(function(jqXHR, error, errorThrown){\n			var errorElem = showError(error);\n			$('.search-results').append(errorElem);\n		});\n\n//wrap in html\n		var showUser = $.html(\"<p>\" +item.display_name+ \"</p>\");\n	};\n\n\n/* notes from justin:\n\nfunction x(test){\n var x = \"\";\n x += \"one\";\n x += test;\n x += \"three\";\n\n return x;\n}\n\nor\n\nvar x = function (test){\n var x = \"\";\n x += \"one\";\n x += test;\n x += \"three\";\n\n return x;\n}\n\n*/\n\n\n\n",
			"file": "app.js",
			"file_size": 4003,
			"file_write_time": 130591661680000000,
			"settings":
			{
				"buffer_size": 4002,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.css",
			"settings":
			{
				"buffer_size": 650,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"install ",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/bmattos/Documents/Thinkful/stacker/index.html",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/Wizard/Collateral/Messaging",
		"/Users/bmattos/Documents/RL-Design/WizardPrototype-v1.1/css/normalize.css",
		"/Users/bmattos/Documents/RL-Design/ComplianceMap/js/jquery.usmap.js",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/Typeahead/TypeAhead-States/css/style.css",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/Typeahead/TypeAhead-States/index.html",
		"/Users/bmattos/Documents/Thinkful/hello-world-ajax/js/app.js",
		"/Users/bmattos/Documents/Thinkful/hello-world-ajax/index.html",
		"/Users/bmattos/Documents/RL-Design/ComplianceMap/index.html",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/StateProcessing-loaderPrototype/State Processing Times for Business Entity Filings   Rocket Lawyer.html",
		"/Users/bmattos/Desktop/StateProcessing-loaderPrototype/State Processing Times for Business Entity Filings   Rocket Lawyer.html",
		"/Users/bmattos/Documents/RL-Design/WizardPrototype-v1.1/css/style.css",
		"/Users/bmattos/Documents/RL-Design/WizardPrototype-v1/css/style.css",
		"/Users/bmattos/Documents/RL-Design/WizardPrototype-v1/index.html",
		"/Users/bmattos/Documents/RL-Design/WizardPrototype-v1/js/app.js",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/WizardPrototype-v1/css/style.css",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/WizardPrototype-v1/js/app.js",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/WizardPrototype-v1/index.html",
		"/Users/bmattos/Documents/Thinkful/CSS-quiz/Collateral/quiz-master/scripts/script.js",
		"/Users/bmattos/Documents/RL-Design/Styleguide/index.html",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/Launchathon/Site/launchathon-foundation-v2/index2",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/Launchathon/Site/launchathon-site-v1/launchathon-site-v1/index.html",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/Launchathon/Site/launchathon-site-v1/launchathon-site-v1/css/style.css",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/skrollr-page/index.html",
		"/Users/bmattos/Desktop/InCorp-Blake-Local/Projects/skrollr-page/css/style.css",
		"/Users/bmattos/Documents/Thinkful/GoogleClone/css/main.css",
		"/Users/bmattos/Documents/Thinkful/GoogleClone/index.html"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"check",
			"large-6",
			"large-3",
			"recomend",
			"recommendation",
			"recomend",
			"<a",
			"● ",
			"view",
			"check",
			">\n",
			"selection",
			"outer",
			"border",
			"900",
			"check",
			"span",
			"outer",
			"type",
			"item",
			"type",
			"margin",
			" \n",
			"oops",
			"progress",
			"app is",
			"read",
			"star",
			"\").",
			"optionOne",
			"activequestion",
			"dev12.",
			"loading",
			"check",
			"c8c8c8",
			"h2",
			"entit",
			"i3",
			"id3",
			"easing",
			"active",
			"button",
			"shadow",
			"radius",
			"raiu",
			"background",
			"<",
			"li",
			"user",
			"parser",
			"!",
			"cheat",
			"test4",
			"test3",
			"test2",
			"test2submit",
			"test1",
			"mage",
			"0",
			"data",
			"a",
			"href",
			"div"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"medium-6",
			"medium-3",
			"recommend",
			"option1",
			"",
			"dbdbdb",
			"background-color",
			"winners",
			"vote",
			"submitidea",
			"submit",
			"howitworks"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4002,
						"regions":
						{
						},
						"selection":
						[
							[
								3783,
								3783
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 1.0,
						"translation.y": 4.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 650,
						"regions":
						{
						},
						"selection":
						[
							[
								36,
								36
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "stacker.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
